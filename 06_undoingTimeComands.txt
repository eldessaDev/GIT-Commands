==========================
=🔁UNDOING-TIME-COMMANDS==
==========================

🕰️ Go Back to Previous Commits
git checkout <commit-hash>              → Go to a specific commit.
git checkout 9a8ee75                    → Checkout an old commit by hash.
git checkout HEAD~1                     → Checkout the previous commit (1 commit before HEAD).

🔧 Options After Checkout:
Stay detached                           → You’re viewing old files; not on a branch.
Reattach HEAD                           → Switch back to your previous branch.
Create new branch                       → Start a new branch from the current (old) commit.

🔀 Switch Branches
git switch -                            → Switch to the last checked-out branch.

♻️ Restore or Discard File Changes
git checkout HEAD <filename>            → Restore a file from the latest commit.
git checkout -- <filename>              → Discard unstaged file changes.
git restore <filename>                  → Discard unstaged changes to the file.
git restore --source HEAD~2 <filename>  → Restore file from two commits ago.
git restore --stage secrets.txt         → Unstage a file from the index (undo git add).

🔁 Reset Commits and/or Changes
git reset <commit-hash>                 → Undo commits but keep file changes.
git reset --hard                        → Remove commits and erase file changes.

🛡️ Undo a Commit Safely
git revert <commit-hash>                → Create a new commit that undoes the selected commit (safe and reversible).



